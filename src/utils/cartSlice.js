// Importing the `createSlice` function from Redux Toolkit, which simplifies creating Redux slices
import { createSlice } from "@reduxjs/toolkit";

// Creating a slice for the shopping cart
const cartSlice = createSlice({
    // Name of the slice, used in action types
    name: 'cart',

    // Initial state of the slice, starting with an empty array of items
    initialState: {
        items: [],   
    },

    // Reducers define how the state can be updated based on actions
    reducers: {

        // Reducer to handle adding an item to the cart
        // Mutating the state here means we are modifying the state
        //Redux toolkit uses immer BTS
        addItem: (state, action) => {
            // Push the new item (provided in action.payload) into the items array
            state.items.push(action.payload);
        },

        // Reducer to handle removing the last item from the cart
        removeItem: (state) => {
            // Remove the last item from the items array
            state.items.pop();
        },

        // Reducer to handle clearing all items from the cart
        clearCart: (state) => {
            // Set the length of the items array to 0, effectively clearing it
            state.items.length = 0;
        }
    },
});


// {
//     actions: {
//         addItem,
//         removeItem,
//         clearCart,
//     },
//     reducer
// }


// Exporting the actions generated by createSlice so they can be dispatched elsewhere in the app
export const { addItem, removeItem, clearCart } = cartSlice.actions;

// Exporting the reducer function created by createSlice, to be used in the Redux store
export default cartSlice.reducer;
